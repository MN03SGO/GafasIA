
# GAFAS IA - DEPENDENCIAS DEL PROYECTO
# Proyecto de bachillerato por Sigaran
# Sistema de asistencia visual para personas con discapacidad visual
# RECAPITULACION 05/08/2025

# ====== PROCESAMIENTO DE IMAGEN Y COMPUTER VISION ======
opencv-python==4.8.1.78
# OpenCV para procesamiento de imágenes y video en tiempo real
# Incluye funciones para captura de cámara, filtros, detección básica

opencv-contrib-python==4.8.1.78
# Módulos adicionales de OpenCV con algoritmos extra
# Incluye detectores HOG, cascadas, y otros algoritmos avanzados

numpy==1.24.3
# Biblioteca fundamental para computación científica
# Manejo eficiente de arrays y operaciones matemáticas

Pillow==10.0.0
# Biblioteca para manipulación de imágenes
# Útil para conversiones de formato y procesamiento básico

# ====== INTELIGENCIA ARTIFICIAL Y DEEP LEARNING ======
torch==2.0.1
# PyTorch - Framework de deep learning
# Necesario para ejecutar modelos YOLO y otros modelos de IA

torchvision==0.15.2
# Biblioteca de visión por computadora para PyTorch
# Incluye transformaciones, datasets y modelos preentrenados

ultralytics==8.0.165
# Implementación oficial de YOLOv8
# Detección de objetos en tiempo real con alta precisión
# Incluye modelos preentrenados y fácil integración

# ====== RECONOCIMIENTO ÓPTICO DE CARACTERES (OCR) ======
pytesseract==0.3.10
# Wrapper de Python para Tesseract OCR
# Extrae texto de imágenes con soporte para múltiples idiomas

# NOTA IMPORTANTE: También necesitas instalar Tesseract en el sistema:
# Ubuntu/Debian: sudo apt-get install tesseract-ocr tesseract-ocr-spa
# Windows: Descargar desde https://github.com/tesseract-ocr/tesseract
# macOS: brew install tesseract tesseract-lang

# ====== SÍNTESIS DE VOZ (TEXT-TO-SPEECH) ======
pyttsx3==2.90
# Motor de texto a voz offline
# Funciona sin conexión a internet, ideal para Raspberry Pi

gTTS==2.3.2
# Google Text-to-Speech (alternativa online)
# Mejor calidad de voz pero requiere conexión a internet

pygame==2.5.2
# Para reproducción de audio cuando se use gTTS
# También útil para efectos de sonido adicionales

# ====== CONFIGURACIÓN Y ARCHIVOS ======
PyYAML==6.0.1
# Lectura y escritura de archivos YAML
# Para cargar configuraciones del sistema

# ====== SISTEMA DE LOGGING Y MONITOREO ======
colorlog==6.7.0
# Logging con colores para mejor visualización en consola
# Facilita la depuración durante el desarrollo

rich==13.5.2
# Biblioteca para output enriquecido en terminal
# Barras de progreso, tablas, y texto formateado

# ====== RECONOCIMIENTO FACIAL (OPCIONAL) ======
face-recognition==1.3.0
# Biblioteca simple para reconocimiento facial
# Basada en dlib, muy precisa pero requiere más recursos

dlib==19.24.2
# Biblioteca de machine learning y computer vision
# Requerida por face-recognition
# NOTA: Puede requerir cmake: pip install cmake

# ====== UTILIDADES PARA RASPBERRY PI ======
# Descomenta estas líneas si vas a ejecutar en Raspberry Pi:

# RPi.GPIO==0.7.1
# Control de pines GPIO de Raspberry Pi
# Para controles adicionales o indicadores LED

# picamera2==0.3.12
# Biblioteca para output enriquecido en terminal
# Barras de progreso, tablas, y texto formateado

# ====== RECONOCIMIENTO FACIAL (OPCIONAL) ======
face-recognition==1.3.0
# Biblioteca simple para reconocimiento facial
# Basada en dlib, muy precisa pero requiere más recursos

dlib==19.24.2
# Biblioteca de machine learning y computer vision
# Requerida por face-recognition
# NOTA: Puede requerir cmake: pip install cmake

# ====== UTILIDADES PARA RASPBERRY PI ======
# Descomenta estas líneas si vas a ejecutar en Raspberry Pi:

# RPi.GPIO==0.7.1
# Control de pines GPIO de Raspberry Pi
# Para controles adicionales o indicadores LED

# picamera2==0.3.12
# Biblioteca moderna para cámara de Raspberry Pi
# Mejor rendimiento que la biblioteca picamera antigua

# gpiozero==1.6.2
# Interfaz simple para dispositivos GPIO
# Facilita el control de sensores y actuadores

# ====== COMUNICACIÓN Y REDES (OPCIONAL) ======
requests==2.31.0
# Para peticiones HTTP si necesitas APIs externas
# Útil para servicios de voz online o actualizaciones

# ====== HERRAMIENTAS DE DESARROLLO ======
# Estas dependencias son opcionales, solo para desarrollo:

pytest==7.4.0
# Framework de testing para pruebas unitarias
# Instalar solo en entorno de desarrollo

pytest-cov==4.1.0
# Cobertura de código para pruebas
# Instalar solo en entorno de desarrollo

black==23.7.0
# Formateador automático de código Python
# Mantiene el código con estilo consistente

flake8==6.0.0
# Linter para detectar errores de estilo
# Ayuda a mantener código limpio

# ====== VERSIONES Y COMPATIBILIDAD ======
# Requisitos mínimos del sistema:


# - Python >= 3.8
# - RAM >= 4GB (recomendado 8GB para desarrollo)
# - Espacio en disco >= 2GB
# - Cámara compatible con OpenCV
# - CUDA >= 11.7 (opcional, solo para GPU NVIDIA)

# ====== INSTALACIÓN ======
# Para instalar todas las dependencias:
# pip install -r requirements.txt

# Para instalar solo las dependencias básicas (sin desarrollo):
# pip install opencv-python numpy torch torchvision ultralytics pytesseract pyttsx3 PyYAML colorlog

# Para Raspberry Pi (instalación optimizada):
# pip install opencv-python-headless numpy torch torchvision ultralytics pytesseract pyttsx3 PyYAML

# ====== NOTAS ADICIONALES ======
# 1. En Raspberry Pi, considera usar opencv-python-headless para menor uso de memoria
# 2. torch y torchvision pueden ser pesados para Raspberry Pi, considera versiones CPU-only
# 3. Para producción, fija todas las versiones para evitar incompatibilidades
# 4. Algunas dependencias pueden requerir compilación, ten paciencia en la instalación
